import moment from"moment";import{stylize,setEventStyles,setLevelStyles,setMessageStyles}from"./modules/style.js";import{colorize,decolorize,setEventColor,setLevelColor,setMessageColor,setServiceColor}from"./modules/color.js";import{writeLogFile,getLogDumpDir,isWriteFile,setLogDumpDir,setIsWriteFile}from"./modules/file.js";import{sprintf}from"sprintf-js";function log(level,service,event,message){let{date,timeStamp}=function(){let momentInstance=moment(),date=momentInstance.format("YYYY-MM-DD"),time=momentInstance.format("h:mm:ss A");return{date,timeStamp:`${date} ${time}`}}(),_colored=colorize(stylize({level,service,event,message})),_formatted=sprintf("%s | %s | %s > %s: %s",timeStamp,_colored.level,_colored.service,_colored.event,_colored.message);console.log("%s",_formatted),isWriteFile()&&writeLogFile(`${date}`,decolorize(_formatted))}let loggerInstance={info:(service,event,message)=>log("info",service,event,message),error:(service,event,message)=>log("error",service,event,message),fatal:(service,event,message)=>log("fatal",service,event,message),warn:(service,event,message)=>log("warn",service,event,message),debug:(service,event,message)=>log("debug",service,event,message),success:(service,event,message)=>log("success",service,event,message)};function Logger(){return loggerInstance}export{setEventStyles,setLevelStyles,setMessageStyles,setEventColor,setLevelColor,setMessageColor,setServiceColor,getLogDumpDir,isWriteFile,setLogDumpDir,setIsWriteFile,Logger};