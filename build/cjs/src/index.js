"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var obj,target=exports,all={Logger:function(){return Logger},getLogDumpDir:function(){return _file.getLogDumpDir},isWriteFile:function(){return _file.isWriteFile},setEventColor:function(){return _color.setEventColor},setEventStyles:function(){return _style.setEventStyles},setIsWriteFile:function(){return _file.setIsWriteFile},setLevelColor:function(){return _color.setLevelColor},setLevelStyles:function(){return _style.setLevelStyles},setLogDumpDir:function(){return _file.setLogDumpDir},setMessageColor:function(){return _color.setMessageColor},setMessageStyles:function(){return _style.setMessageStyles},setServiceColor:function(){return _color.setServiceColor},writeLogFile:function(){return _file.writeLogFile}};for(var name in all)Object.defineProperty(target,name,{enumerable:!0,get:all[name]});const _moment=(obj=require("moment"))&&obj.__esModule?obj:{default:obj},_style=require("./modules/style.js"),_color=require("./modules/color.js"),_file=require("./modules/file.js"),_sprintfjs=require("sprintf-js");function log(level,service,event,message){let{date,timeStamp}=function(){let momentInstance=(0,_moment.default)(),date=momentInstance.format("YYYY-MM-DD"),time=momentInstance.format("HH:mm:ss");return{date,timeStamp:`${date} ${time}`}}(),_stylized=(0,_style.stylize)({level,service,event,message}),_colored=(0,_color.colorize)(_stylized),_formatted=(0,_sprintfjs.sprintf)("%s | %s | %s > %s: %s",timeStamp,_colored.level,_colored.service,_colored.event,_colored.message);console.log("%s",_formatted),(0,_file.isWriteFile)()&&(0,_file.writeLogFile)(`${date}`,(0,_color.decolorize)(_formatted))}const loggerInstance={info:(service,event,message)=>log("info",service,event,message),error:(service,event,message)=>log("error",service,event,message),fatal:(service,event,message)=>log("fatal",service,event,message),warn:(service,event,message)=>log("warn",service,event,message),debug:(service,event,message)=>log("debug",service,event,message),success:(service,event,message)=>log("success",service,event,message)};function Logger(){return loggerInstance}